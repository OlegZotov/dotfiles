set nocompatible

call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-bundler', { 'for': 'ruby' }
Plug 'tpope/vim-haml', { 'for': 'haml' }
Plug 'tpope/vim-rails', { 'for': 'ruby' }
Plug 'vim-ruby/vim-ruby', { 'for': 'ruby' }
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'Shougo/echodoc.vim'
Plug 'Valloric/MatchTagAlways'
Plug 'airblade/vim-gitgutter'
Plug 'autozimu/LanguageClient-neovim', { 'do': ':UpdateRemotePlugins' }
Plug 'chemzqm/vim-jsx-improve', { 'for': 'javascript' }
Plug 'chrisbra/csv.vim', { 'for': 'csv' }
Plug 'digitaltoad/vim-pug', { 'for': 'pug' }
Plug 'dyng/ctrlsf.vim'
Plug 'ekalinin/Dockerfile.vim'
Plug 'elzr/vim-json'
Plug 'ervandew/supertab'
Plug 'ervandew/supertab'
Plug 'flowtype/vim-flow'
Plug 'godlygeek/tabular'
Plug 'jiangmiao/auto-pairs'
Plug 'jlanzarotta/bufexplorer'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'lepture/vim-jinja', { 'for': 'jinja' }
Plug 'lxhillwind/leader-clipboard'
Plug 'mbbill/undotree'
Plug 'mitermayer/vim-prettier', { 'do': 'npm install', 'for': ['javascript', 'css', 'less', 'scss'] }
Plug 'moll/vim-node'
Plug 'nanotech/jellybeans.vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'othree/html5.vim'
Plug 'pangloss/vim-javascript'
Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }
Plug 'reedes/vim-lexical'
Plug 'rhysd/vim-grammarous'
Plug 'scrooloose/nerdtree'
Plug 'stephpy/vim-yaml', { 'for': 'yaml' }
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-ragtag'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'w0rp/ale'
Plug 'wellle/targets.vim'
Plug 'janko-m/vim-test'
Plug 'tpope/vim-abolish'
call plug#end()

" ================ General Settings Begin ==================
set cursorline
set hidden
set nofoldenable
set wrap
set linebreak
set number
set hlsearch
set ignorecase
set smartcase

set expandtab
set softtabstop=2
set shiftwidth=2

set splitbelow
set splitright
set cmdheight=2
set scrolloff=3

colorscheme jellybeans
" ================ General Settings End ==================

" ================ Key Mappings Begin ==================
let mapleader = "\<Space>"

" Edit .vimrc
map <leader>vl :vsp $MYVIMRC<CR>
map <leader>vr :source $MYVIMRC<CR>

" Map ctrl-movement keys to window switching
map <C-k> <C-w><Up>
map <C-j> <C-w><Down>
map <C-l> <C-w><Right>
map <C-h> <C-w><Left>

" Hide selection highlighting
nmap <silent> // :nohlsearch<CR>

" open neardtree by double leader
nmap <silent> <leader><leader> :NERDTreeToggle<CR>

" find current file in nerdtree
nmap <C-\> :NERDTreeFind<CR>

" leader+b for buffers
nnoremap <leader>b :BufExplorer<CR>

" save by leader + w
nnoremap <Leader>w :w<CR>

" search files by name and by content
nnoremap <leader>ff :Files<CR>
nnoremap <leader>fa :Ag<CR>

" search commits
nnoremap <leader>fc :Commits<CR>

" search lines
nnoremap <leader>fl :Lines<CR>

" find merge conflict markers
nmap <silent> <leader>fc <ESC>/\v^[<=>]{7}( .*\|$)<CR>

" format the entire file
nnoremap ff :normal! gg=G``<CR>

" Move between linting errors
nnoremap ]r :ALENextWrap<CR>
nnoremap [r :ALEPreviousWrap<CR>

" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

"To map <Esc> to exit terminal-mode:
tnoremap <Esc> <C-\><C-n>

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-j> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)

nmap <silent> <leader>tn :TestNearest<CR>
nmap <silent> <leader>tf :TestFile<CR>
nmap <silent> <leader>ts :TestSuite<CR>
nmap <silent> <leader>tl :TestLast<CR>
nmap <silent> <leader>tg :TestVisit<CR>
" ================ Key Mappings End ==================

" ================ Plugin Configuration Begin ==================
let g:lexical#spelllang = ['en_us', 'ru_ru']

let g:ale_fixers = {
\   'javascript': ['eslint'],
\}
" let g:ale_javascript_eslint_use_global = 1
let g:ale_fix_on_save = 0
" ================ Plugin Configuration End ==================

" ================ Persistent Undo Begin ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif
" ================ Persistent Undo End ==================

" https://github.com/vim/vim/blob/master/runtime/doc/russian.txt
" Enable hotkeys for Russian layout
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz
